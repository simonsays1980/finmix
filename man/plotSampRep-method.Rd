% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcoutputpermhierpost.R
\name{plotSampRep}
\alias{plotSampRep}
\title{Plot the sampling representation of component parameters}
\arguments{
\item{x}{An \code{mcmcoutput} or \code{mcmcoutputperm} object containing all sampled
values.}

\item{dev}{A logical indicating, if the plots should be shown by a graphical
device. If plots should be stored to a file set \code{dev} to \code{FALSE}.}

\item{...}{Further arguments to be passed to the plotting function.}
}
\value{
The sampling representation of the MCMC samples.
}
\description{
Calling \code{\link[=plotSampRep]{plotSampRep()}} on an object of class \code{mcmcoutput} or
\code{mcmcoutputperm} plots the sampling representation of the sampled component
parameters from MCMC sampling, either the original parameters or the
relabeled ones (\code{mcmcoutputperm}).
}
\details{
To visualize the posterior density of the component parameters the MCMC
draws are used as a sampling representation. Each combination of component
parameters is plotted in a scatter to visualize the contours of the
posterior density. For bivariate component parameters this could also be
done by estimating and plotting the density directly, but for
higher-dimensional parameter vectors this is not anymore possible and so
sampling representations define a proper solution for visualization and
allow us to study how a specific dimension of the parameter vector differs
among the various components of the mixture distribution. If this element
is significantly different among components we will observe \code{K(K-1)} modes
in the sampling representation. On the other side, if this element is
mainly the same among the components of the mixture, we will rather observe
a single cluster.

As Frühwirth-Schnatter (2006) writes, "One informal method for diagnosing
mixtures is mode hunting in the mixture posterior density
(Frühwirth-Schnatter, 2001b). It is based on the observation that with an
increasing number of observations, the mixture likelihood function has \verb{K!}
dominant modes if the data actually arise from a finite mixture distribution
with \code{K} components, and that less than \verb{K!} dominant modes are present if
the finite mixture model is overfitting the number of components." The
sampling representation helps to perform this mode hunting in practice.

Note that this method for \code{mcmcoutputperm} objects is only implemented for
mixtures of Poisson and Binomial distributions.
}
\examples{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotSampRep(f_output)

}
\references{
\itemize{
\item Frühwirth-Schnatter (2006), "Finite Mixture and Markov Switching Models"
\item Frühwirth-Schnatter, S. (2001b), "Markov chain Monte Carlo estimation of
classical and dynamic switching and mixture models." Journal of the
American Statistical Association 96, 194–209.
}
}
\seealso{
\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=mcmcpermute]{mcmcpermute()}} for permuting MCMC samples
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting the point process of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}
}
