% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fdata.R
\docType{class}
\name{fdata-class}
\alias{fdata-class}
\alias{.fdata}
\title{Finmix \code{fdata} class}
\description{
The \code{fdata} class holds the data for finite mixture distributions.
}
\details{
The \code{fdata} class defines an essential part of the \code{finmix} package and
MCMC sampling for finite mixture distributions. It stores the data for
finite mixture distributions which includes always the observations stored
in slot \code{y} and occasionally also known indicators in slot \code{S}. The latter
ones define either a so-called finite mixture model with \emph{fixed} indicators
or are used as starting indicators in MCMC sampling for a model with unknown
indicators.

Observations can be stored in either in row or column format (default). In
the former case the slot \code{bycolumn} has to be set to \code{FALSE} to indicate the
safeguard functions in methods that the observations are stored in row
format. If indicators are stored in the \code{fdata} object they must be stored
in the same format as the observations. When using the setter \verb{setS()<-}
converting the repetitions to the right format is handled for the user.

For discrete mixture models with Poisson or Exponential distributions
exposures can be added to the data (and model). Exposures scale the rate
parameters individually for each observation. Exposures get stored in the
slot \code{exp} and have to be either of dimension \code{Nx1} or of dimension \verb{1x1}.
Like observations and indicators, exposures also have to be provided in the
same data format, i.e. either row or column depending on the slot \code{bycolumn}
set to \code{FALSE} or \code{TRUE}. When using the setter \verb{setExp()<-} converting the
repetitions to the right format is handled for the user.

For mixtures of binomial distributions it is possible to include repetitions
in the slot \code{T} of the \code{fdata} object. Repetitions can be constant or
varying. In the former case the dimension of slot \code{T} is \verb{1x1} and in the
latter one it is \code{Nx1}. Depending on the slot \code{bycolumn} the repetitions
have to be provided in row or column format. When using the setter
\verb{setT()<-} converting the repetitions to the right format is handled for the
user.

For mixtures of multivariate data the slot \code{r} is larger than one. For all
other mixtures it is equal to one. Note that in case of multivariate mixture
models the data in slot \code{y} has to be of dimension \code{Nxr} or \code{rxN} depending
on the slot \code{bycolumn} set to \code{TRUE} or \code{FALSE}.
\subsection{Methods}{

There are a couple of methods that intend to simplify the handling of data
for the user. These methods are listed below.
\subsection{Show}{
\itemize{
\item \code{show()} gives a short summary of the object's slots.
}
}

\subsection{Getters}{
\itemize{
\item \code{getY()} returns the \code{y} slot.
\item \code{getColY()} returns the \code{y} slot in column format independent of
\code{bycolumn}.
\item \code{getRowY()} returns the \code{y} slot in row format independent of \code{bycolumn}.
\item \code{getN()} returns the \code{N} slot.
\item \code{getr()} returns the \code{r} slot.
\item \code{getS()} returns the \code{S} slot.
\item \code{getColS()} returns the \code{S} slot in column format independent of
\code{bycolumn}.
\item \code{getRowS()} returns the \code{S} slot in row format independent of \code{bycolumn}.
\item \code{getBycolumn()} returns the \code{bycolumn} slot.
\item \code{getName()} returns the \code{name} slot.
\item \code{getType()} returns the \code{type} slot.
\item \code{getSim()} returns the \code{sim} slot.
\item \code{getExp()} returns the \code{exp} slot.
\item \code{getColExp()} returns the \code{y} slot in column format independent of
\code{bycolumn}.
\item \code{getRowExp()} returns the \code{y} slot in row format independent of \code{bycolumn}.
\item \code{getT()} returns the \code{T} slot.
\item \code{getColT()} returns the \code{T} slot in column format independent of
\code{bycolumn}.
\item \code{getRowT()} returns the \code{T} slot in row format independent of \code{bycolumn}.
}
}

\subsection{Setters}{

All setters help the user to set the slots in the right format and with the
correct class (integer, matrix, etc.). It is internally checked, if the
new value fits the other slots of the object.
\itemize{
\item \verb{setY()<-} sets the \code{y} slot.
\item \verb{setN()<-} sets the \code{N} slot.
\item \verb{setR()<-} sets the \code{r} slot.
\item \verb{setS()<-} sets the \code{S} slot.
\item \code{setBycolumn} sets the \code{bycolumn} slot.
\item \verb{setName()<-} sets the \code{name} slot.
\item \verb{setType()<-} sets the \code{type} slot.
\item \verb{setSim()<-} sets the \code{sim} slot.
\item \verb{setExp()<-} sets the \code{exp} slot.
\item \verb{setT()<-} sets the \code{T} slot.
}
}

\subsection{Checking methods}{

The checking methods are provided to allow a user to integrate the \code{finmix}
classes more easily into a larger code basis. They check, if the slots are
available and return a \code{logical}.
\itemize{
\item \code{hasY()} checks, if slot \code{y} is not empty.
\item \code{hasS()} checks, if slot \code{S} is not empty.
\item \code{hasExp()} checks, if the slot \code{exp} is not empty.
\item \code{hasT()} checks, if the slot \code{T} is not empty.
}
}

\subsection{Plotting}{

The plotting function should help the user to get an impression of how the
data in the \code{fdata} object is distributed. This is important for evaluating
what kind of distribution to choose and how many mixture components to test
for.
\itemize{
\item \code{plot(x, y, dev=TRUE, ...)} plots the observations in the \code{y} slot. If the
\code{type} is \code{"discrete"} a \code{\link[=barplot]{barplot()}} is shown. In the \code{"continuous"} case
the plot depends on the number of dimensions: if the dimension \code{r} of the
data is one, a \code{\link[=histogram]{histogram()}} shows the distribution of the observations.
In case of a two-dimensional data set, histograms of the marginal
distributions are plotted together with a scatter \code{\link[=plot]{plot()}} and a
two-dimensional kernel-density (see \code{\link[=bkde2D]{bkde2D()}}). In case of a multivariate
data set with more than two dimensions a \code{\link[=pairs]{pairs()}} plot is returned. The
argument \code{dev} should be put to \code{FALSE} if the output should be in a file.
\code{...} allows the user to pass further arguments to the internal functions.
}
}

}
}
\section{Slots}{

\describe{
\item{\code{y}}{A matrix containing the observations for finite mixture estimation.
Can be by column or row depending on the slot \code{bycolumn}.}

\item{\code{N}}{An integer holding the number of observations.}

\item{\code{r}}{An integer defining the dimension of the data. Only for multivariate
distributions like \code{normult} or \code{studmult} the dimension is
larger one.}

\item{\code{S}}{A matrix containing the indicators of the data. If the \code{fdata} class
contains indicators estimation is performed with a fixed indicator
approach.}

\item{\code{bycolumn}}{A logical indicating if the data in \code{y} and \code{S} is sorted by
by column (\code{TRUE}) or row (\code{FALSE}).}

\item{\code{name}}{A character specifying a name for the data. Optional.}

\item{\code{type}}{A character specifying the data type: either \code{discrete} for
discrete data or \code{continuous} for continuous data. The two data types are
treated differently when calculating data moments.}

\item{\code{sim}}{A logical indicating, if the data was simulated.}

\item{\code{exp}}{A matrix containing the \emph{exposures} of Poisson data.}

\item{\code{T}}{A matrix containing the (optional) repetitions of binomial or Poisson
data. Must be of type integer.}
}}

\seealso{
\itemize{
\item \code{\link[=fdata]{fdata()}} for the class constructor
\item \linkS4class{model} for the class from which data can be simulated
\item \code{\link[=simulate]{simulate()}} for the method of the \code{model} class simulating data from a
finite mixture model
}
}
