% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcoutputpermhierpost.R
\name{plotPointProc}
\alias{plotPointProc}
\title{Plot the point process of the component parameters}
\arguments{
\item{x}{An \code{mcmcoutput} or \code{mcmcoutputperm} object containing all sampled
values.}

\item{dev}{A logical indicating, if the plots should be shown by a graphical
device. If plots should be stored to a file set \code{dev} to \code{FALSE}.}

\item{...}{Further arguments to be passed to the plotting function.}
}
\value{
The point process of the MCMC samples.
}
\description{
Calling \code{\link[=plotPointProc]{plotPointProc()}} on an object of class \code{mcmcoutput} or
\code{mcmcoutputperm} plots the point process of the sampled component parameters
from MCMC sampling, either the original parameters or the relabeled ones.
}
\details{
The point process is used to identify the number of components in the
underlying distribution of the data for mixtures with unknown number of
components (see Fr√ºhwirth-Schnatter (2006, Subsection 3.7.1)). The number of
clusters that evolve in the plot give a hint on the true number of
components in the mixture distribution. The MCMC draws will scatter around
the points corresponding to the true point process of the mixture model. The
spread of the clusters represent the uncertainty of estimating the points.

For mixtures with univariate component parameters (e.g. Poisson,
Exponential) the component parameters are plotted against draws from a
standard normal distribution. For mixtures with bivariate component
parameters (e.g. Normal) the first parameters are plotted against the
second ones. For mixtures with multivariate component parameters a point
process for each type of mixture model is plotted.

Note that this method for \code{mcmcoutputperm} objects is only implemented for
mixtures of Poisson and Binomial distributions.
}
\examples{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
f_outputperm <- mcmcpermute(f_output)
plotPointProc(f_outputperm)

}
\seealso{
\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=mcmcpermute]{mcmcpermute()}} for permuting MCMC samples
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}
}
