% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcoutputhierpost.R
\docType{class}
\name{mcmcoutput-class}
\alias{mcmcoutput-class}
\title{Finmix \code{mcmcoutput} class}
\description{
The \code{mcmcoutput} class stores all MCMC samples and corresponding information.
}
\details{
Calling \code{\link[=mixturemcmc]{mixturemcmc()}} on appropriate input arguments performs MCMC
sampling and returns an \code{mcmcoutput} object that stores all samples and
corresponding information like hyper-parameters, the finite mixture model
specified in a \code{model} object and the \code{prior} that specifies the prior
distribution. All slots are listed below. Note that not all slots must be
available in a object of class \code{mcmcoutput}. Some slots get only occupied,
if a hierarchical prior had been used in MCMC sampling, or if posterior
samples should be stored. Furthermore, the slots also look different, if
MCMC sampling had been performed for a model with fixed indicators (see for
subclasses for example \linkS4class{mcmcoutputfix}, \linkS4class{mcmcoutputbase},
\linkS4class{mcmcoutputhier} or \linkS4class{mcmcoutputpost}).

The class \code{mcmcoutput} is a class union and includes all classes that
define objects to store MCMC samples and is used to dispatch methods for
\code{mcmcoutput} objects. For the user this detail is not important,
especially as this class has no exported constructor. Objects are solely
constructed internally within the function \code{\link[=mixturemcmc]{mixturemcmc()}}.
\subsection{Class methods}{

This class comes along with a couple of methods that should give the user
some comfort in handling the MCMC sampling results. There are no setters for
this class as the slots are only set internally.
\subsection{Show}{
\itemize{
\item \code{show()} shows a short summary of the object's slots.
}
}

\subsection{Getters}{
\itemize{
\item \code{getM()} returns the \code{M} slot.
\item \code{getBurnin()} returns the \code{burnin} slot.
\item \code{getRanperm()} returns the \code{ranperm} slot.
\item \code{getPar()} returns the \code{par} slot.
\item \code{gteWeight()} returns the \code{weight} slot, if available.
\item \code{getLog()} returns the \code{log} slot.
\item \code{getEntropy()} returns the \code{entropy} slot, if available.
\item \code{getHyper()} returns the \code{hyper} slot, if available.
\item \code{getPost()} returns the \code{post} slot, if available.
\item \code{getST()} returns the \code{ST} slot, if available.
\item \code{getS()} returns the \code{S} slot, if available.
\item \code{getNK()} returns the \code{NK} slot, if available.
\item \code{getClust()} returns the \code{clust} slot, if available.
\item \code{getModel()} returns the \code{model} slot.
\item \code{getPrior()} returns the \code{prior} slot.
}
}

\subsection{Plotting}{

Plotting functionality for the \code{mcmcoutput} helps the user to inspect MCMC
results.
\itemize{
\item \code{plotTraces()} plots traces of MCMC samples. See \code{\link[=plotTraces]{plotTraces()}} for
further information.
\item \code{plotHist()} plots histograms of parameters and weights. See \code{\link[=plotHist]{plotHist()}}
for further information.
\item \code{plotDens()} plots densities of parameters and weights. See \code{\link[=plotDens]{plotDens()}}
for further information.
\item \code{plotPointProc()} plots the point process of component parameters. See
\link{plotPointProc} for further information.
\item \code{plotSampRep()} plots the sampling representation of component parameters.
See \code{\link[=plotSampRep]{plotSampRep()}} for further information.
\item \code{plotPostDens()} plots the posterior density of component parameters. Note
that this function can only be applied for mixtures of two components. See
\code{\link[=plotPostDens]{plotPostDens()}} for further information.
}
}

}

\subsection{Slots}{
\itemize{
\item \code{M} An integer defining the number of iterations in MCMC sampling.
\item \code{burnin} An integer defining the number of iterations in the burn-in
phase of MCMC sampling. These number of sampling steps are not stored
in the output.
\item \code{ranperm} A logical indicating, if MCMC sampling has been performed
with random permutations of components.
\item \code{par} A named list containing the sampled component parameters.
\item \code{weight} An \code{array} of dimension \verb{M x K} containing the sampled
weights.
\item \code{log} A named list containing the values of the mixture log-likelihood,
mixture prior log-likelihood, and the complete data posterior
log-likelihood.
\item \code{hyper} A list storing the sampled parameters from the hierarchical
prior.
\item \code{post} A named list containing a list \code{par} that contains the posterior
parameters as named arrays.
\item \code{entropy} An \code{array} of dimension \verb{M x 1} containing the entropy
for each MCMC draw.
\item \code{ST} An \code{array} of dimension \verb{M x 1} containing all MCMC states,
for the last observation in slot \code{y} of the \code{fdata} object passed in to
\code{\link[=mixturemcmc]{mixturemcmc()}} where a state is defined for non-Markov models as the
last indicator of this observation.
\item \code{S} An \code{array} of dimension \verb{N x storeS} containing the last
\code{storeS} indicators sampled. \code{storeS} is defined in the slot \code{storeS} of
the \code{mcmc} object passed into \code{\link[=mixturemcmc]{mixturemcmc()}}.
\item \code{NK} An \code{array} of dimension \verb{M x K} containing the number of
observations assigned to each component for each MCMC draw.
\item \code{clust} An \code{array} of dimension \verb{N x 1} containing the recent
indicators defining the last "clustering" of observations into the
mixture components.
\item \code{model} The \code{model} object that specifies the finite mixture model for
which MCMC sampling has been performed.
\item \code{prior} The \code{prior} object defining the prior distributions for the
component parameters that has been used in MCMC sampling.
}
}
}
\seealso{
\itemize{
\item \linkS4class{mcmcoutputperm} for the corresponding class defined for relabeled
MCMC samples
\item \linkS4class{mcmcoutputfix} for the \code{mcmcoutput} sub-class for models with
fixed indicators
\item \linkS4class{mcmcoutputbase} for the \code{mcmcoutput} sub-class for models with
unknown indicators
\item \linkS4class{mcmcoutputhier} for the \code{mcmcoutput} sub-class for MCMC samples
with hierarchical priors
\item \linkS4class{mcmcoutputpost} for the \code{mcmcoutput} sub-class for MCMC samples
with stored posterior density parameters
}
}
